<map id="rtflann::NNIndex&lt; Distance &gt;" name="rtflann::NNIndex&lt; Distance &gt;">
<area shape="rect" id="node3" href="$classrtflann_1_1_autotuned_index.html" title="{rtflann::AutotunedIndex\l\&lt; Distance \&gt;\n|&#45; bestIndex_\l&#45; bestParams_\l&#45; bestSearchParams_\l&#45; sampledDataset_\l&#45; testDataset_\l&#45; gt_matches_\l&#45; speedup_\l&#45; dataset_\l&#45; target_precision_\l&#45; build_weight_\l&#45; memory_weight_\l&#45; sample_fraction_\l|+ AutotunedIndex()\l+ AutotunedIndex()\l+ AutotunedIndex()\l+ operator=()\l+ ~AutotunedIndex()\l+ clone()\l+ buildIndex()\l+ buildIndex()\l+ addPoints()\l+ removePoint()\land 15 more...\l# buildIndexImpl()\l# freeIndex()\l&#45; evaluate_kmeans()\l&#45; evaluate_kdtree()\l&#45; optimizeKMeans()\l&#45; optimizeKDTree()\l&#45; estimateBuildParams()\l&#45; estimateSearchParams()\l&#45; swap()\l}" alt="" coords="5,735,182,1221"/>
<area shape="rect" id="node4" href="$classrtflann_1_1_composite_index.html" title="{rtflann::CompositeIndex\l\&lt; Distance \&gt;\n|&#45; kmeans_index_\l&#45; kdtree_index_\l|+ CompositeIndex()\l+ CompositeIndex()\l+ CompositeIndex()\l+ operator=()\l+ ~CompositeIndex()\l+ clone()\l+ getType()\l+ size()\l+ veclen()\l+ usedMemory()\land 6 more...\l# swap()\l# buildIndexImpl()\l# freeIndex()\l}" alt="" coords="206,841,368,1115"/>
<area shape="rect" id="node5" href="$classrtflann_1_1_hierarchical_clustering_index.html" title="{rtflann::HierarchicalClustering\lIndex\&lt; Distance \&gt;\n|&#45; tree_roots_\l&#45; pool_\l&#45; memoryCounter_\l&#45; branching_\l&#45; trees_\l&#45; centers_init_\l&#45; leaf_max_size_\l&#45; chooseCenters_\l|+ HierarchicalClusteringIndex()\l+ HierarchicalClusteringIndex()\l+ HierarchicalClusteringIndex()\l+ operator=()\l+ initCenterChooser()\l+ ~HierarchicalClusteringIndex()\l+ clone()\l+ usedMemory()\l+ addPoints()\l+ getType()\l+ serialize()\l+ saveIndex()\l+ loadIndex()\l+ findNeighbors()\l# buildIndexImpl()\l&#45; freeIndex()\l&#45; copyTree()\l&#45; computeLabels()\l&#45; computeClustering()\l&#45; findNeighborsWithRemoved()\l&#45; findNN()\l&#45; addPointToTree()\l&#45; swap()\l}" alt="" coords="393,741,605,1215"/>
<area shape="rect" id="node6" href="$classrtflann_1_1_k_d_tree_index.html" title="{rtflann::KDTreeIndex\l\&lt; Distance \&gt;\n|&#45; trees_\l&#45; mean_\l&#45; var_\l&#45; tree_roots_\l&#45; pool_\l|+ KDTreeIndex()\l+ KDTreeIndex()\l+ KDTreeIndex()\l+ operator=()\l+ ~KDTreeIndex()\l+ clone()\l+ addPoints()\l+ getType()\l+ serialize()\l+ saveIndex()\l+ loadIndex()\l+ usedMemory()\l+ findNeighbors()\l# buildIndexImpl()\l# freeIndex()\l&#45; copyTree()\l&#45; divideTree()\l&#45; meanSplit()\l&#45; selectDivision()\l&#45; planeSplit()\l&#45; getExactNeighbors()\l&#45; getNeighbors()\l&#45; searchLevel()\l&#45; searchLevelExact()\l&#45; addPointToTree()\l&#45; swap()\l}" alt="" coords="629,741,780,1215"/>
<area shape="rect" id="node7" href="$classrtflann_1_1_k_d_tree_single_index.html" title="{rtflann::KDTreeSingleIndex\l\&lt; Distance \&gt;\n|&#45; leaf_max_size_\l&#45; reorder_\l&#45; vind_\l&#45; data_\l&#45; root_node_\l&#45; root_bbox_\l&#45; pool_\l|+ KDTreeSingleIndex()\l+ KDTreeSingleIndex()\l+ KDTreeSingleIndex()\l+ operator=()\l+ ~KDTreeSingleIndex()\l+ clone()\l+ addPoints()\l+ getType()\l+ serialize()\l+ saveIndex()\l+ loadIndex()\l+ usedMemory()\l+ findNeighbors()\l# buildIndexImpl()\l&#45; freeIndex()\l&#45; copyTree()\l&#45; computeBoundingBox()\l&#45; divideTree()\l&#45; computeMinMax()\l&#45; middleSplit()\l&#45; middleSplit_()\l&#45; planeSplit()\l&#45; computeInitialDistances()\l&#45; searchLevel()\l&#45; swap()\l}" alt="" coords="803,735,984,1221"/>
<area shape="rect" id="node8" href="$classrtflann_1_1_k_means_index.html" title="{rtflann::KMeansIndex\l\&lt; Distance \&gt;\n|&#45; branching_\l&#45; iterations_\l&#45; centers_init_\l&#45; cb_index_\l&#45; root_\l&#45; pool_\l&#45; memoryCounter_\l&#45; chooseCenters_\l|+ getType()\l+ KMeansIndex()\l+ KMeansIndex()\l+ KMeansIndex()\l+ operator=()\l+ initCenterChooser()\l+ ~KMeansIndex()\l+ clone()\l+ set_cb_index()\l+ usedMemory()\land 6 more...\l# buildIndexImpl()\l&#45; freeIndex()\l&#45; copyTree()\l&#45; computeNodeStatistics()\l&#45; computeClustering()\l&#45; findNeighborsWithRemoved()\l&#45; findNN()\l&#45; exploreNodeBranches()\l&#45; findExactNN()\l&#45; getCenterOrdering()\l&#45; getDistanceToBorder()\l&#45; getMinVarianceClusters()\l&#45; addPointToTree()\l&#45; swap()\l}" alt="" coords="1008,728,1212,1228"/>
<area shape="rect" id="node9" href="$classrtflann_1_1_linear_index.html" title="{rtflann::LinearIndex\l\&lt; Distance \&gt;\n||+ LinearIndex()\l+ LinearIndex()\l+ LinearIndex()\l+ operator=()\l+ ~LinearIndex()\l+ clone()\l+ addPoints()\l+ getType()\l+ usedMemory()\l+ serialize()\l+ saveIndex()\l+ loadIndex()\l+ findNeighbors()\l# buildIndexImpl()\l# freeIndex()\l}" alt="" coords="1235,841,1371,1115"/>
<area shape="rect" id="node10" href="$classrtflann_1_1_lsh_index.html" title="{rtflann::LshIndex\&lt;\l Distance \&gt;\n|&#45; tables_\l&#45; table_number_\l&#45; key_size_\l&#45; multi_probe_level_\l&#45; xor_masks_\l|+ LshIndex()\l+ LshIndex()\l+ LshIndex()\l+ operator=()\l+ ~LshIndex()\l+ clone()\l+ addPoints()\l+ getType()\l+ serialize()\l+ saveIndex()\l+ loadIndex()\l+ usedMemory()\l+ knnSearch()\l+ knnSearch()\l+ findNeighbors()\l# buildIndexImpl()\l# freeIndex()\l&#45; fill_xor_mask()\l&#45; getNeighbors()\l&#45; getNeighbors()\l&#45; swap()\l}" alt="" coords="1395,775,1536,1181"/>
<area shape="rect" id="node2" href="$classrtflann_1_1_index_base.html" title="{rtflann::IndexBase\n||+ ~IndexBase()\l+ veclen()\l+ size()\l+ getType()\l+ usedMemory()\l+ getParameters()\l+ loadIndex()\l+ saveIndex()\l}" alt="" coords="735,5,864,172"/>
</map>
